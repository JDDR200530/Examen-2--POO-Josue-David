// <auto-generated />
using System;
using Examen_2__Josue_David.DataBase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen_2__Josue_David.Migrations
{
    [DbContext(typeof(GestionDeTiendaDbContext))]
    [Migration("20240727040820_ActualizacionTablaClientes")]
    partial class ActualizacionTablaClientes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen_2__Josue_David.Entity.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClienteId");

                    b.Property<double>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("interert");

                    b.Property<string>("ClienteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cliente_name");

                    b.Property<DateTime>("ClienteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("day_create");

                    b.Property<int>("Comission")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identity_number");

                    b.Property<int>("Term")
                        .HasColumnType("int")
                        .HasColumnName("term");

                    b.Property<double>("loanAmount")
                        .HasColumnType("float")
                        .HasColumnName("loan_amount");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente", "dto");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.Cliente_PlandePago", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("No");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<double>("BalancePrincipal")
                        .HasColumnType("float")
                        .HasColumnName("Balance_Principal");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dia_de_Creacion");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("Dias");

                    b.Property<int>("Interest")
                        .HasColumnType("int")
                        .HasColumnName("Intereses");

                    b.Property<int>("PagoPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("Pago_Principal");

                    b.Property<int?>("PlandePagoNo")
                        .HasColumnType("int");

                    b.Property<double>("SegurodeVida")
                        .HasColumnType("float")
                        .HasColumnName("Seguro_de_Vida");

                    b.HasKey("No");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PlandePagoNo");

                    b.ToTable("cliente_planepago", "dto");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.PlandePago", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<double>("BalancePrincipal")
                        .HasColumnType("float")
                        .HasColumnName("balance_Principal");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Time");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("Interest")
                        .HasColumnType("int");

                    b.Property<int>("PagoPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("pago_principal");

                    b.Property<double>("SegurodeVida")
                        .HasColumnType("float")
                        .HasColumnName("seguro_de_vida");

                    b.HasKey("No");

                    b.HasIndex("ClienteId");

                    b.ToTable("plan_de_pago", "dto");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.Cliente_PlandePago", b =>
                {
                    b.HasOne("Examen_2__Josue_David.Entity.Cliente", null)
                        .WithMany("Clientes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Examen_2__Josue_David.Entity.PlandePago", "PlandePago")
                        .WithMany("ClientesPlandePago")
                        .HasForeignKey("PlandePagoNo");

                    b.Navigation("PlandePago");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.PlandePago", b =>
                {
                    b.HasOne("Examen_2__Josue_David.Entity.Cliente", null)
                        .WithMany("Pagos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.Cliente", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Examen_2__Josue_David.Entity.PlandePago", b =>
                {
                    b.Navigation("ClientesPlandePago");
                });
#pragma warning restore 612, 618
        }
    }
}
